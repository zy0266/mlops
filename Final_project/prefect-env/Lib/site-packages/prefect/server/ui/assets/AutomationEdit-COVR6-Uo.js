import{d as A,B as y,W as b,M as w,f as C,c as g,i as a,j as h,u as k,o as v,k as u,l as e,G as B,H as r,C as P,K as E,P as d,Y as I}from"./index-D4VbDMHP.js";import{_ as K}from"./AutomationWizard.vue_vue_type_script_setup_true_lang-DeRXHCHJ.js";import{u as N}from"./usePageTitle-CsbPhaeP.js";import{u as T}from"./usePrefectApi-CCHnixsb.js";import"./mapper-Cp_3QHN9.js";import"./api-BPC0-qJe.js";const G=A({__name:"AutomationEdit",async setup(U){let o,m;const i=T(),c=y(),_=k(),p=b("automationId"),s=([o,m]=w(()=>i.automations.getAutomation(p.value)),o=await o,m(),o);N(`Edit Automation: ${s.name}`);const f=C(()=>[{text:"Automations",to:c.automations()},{text:s.name}]);async function x(l){try{await i.automations.updateAutomation(p.value,l),d(r.success.automationUpdate),_.push(c.automations())}catch(t){console.error(t);const n=I(t,r.error.automationUpdate);d(n,"error",{timeout:!1})}}return(l,t)=>{const n=h("p-layout-default");return v(),g(n,{class:"workspace-automation-create"},{header:a(()=>[u(e(E),{crumbs:f.value},{actions:a(()=>[u(e(B),{to:e(r).docs.automations},{default:a(()=>t[0]||(t[0]=[P(" Documentation ")])),_:1},8,["to"])]),_:1},8,["crumbs"])]),default:a(()=>[u(K,{automation:e(s),editing:"",onSubmit:x},null,8,["automation"])]),_:1})}}});export{G as default};
//# sourceMappingURL=AutomationEdit-COVR6-Uo.js.map
